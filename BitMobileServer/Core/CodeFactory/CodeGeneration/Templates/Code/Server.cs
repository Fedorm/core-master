// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 11.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace CodeFactory.CodeGeneration.Templates.Code
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "11.0.0.0")]
    public partial class Server : ServerBase
    {
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("using System;\r\nusing Common;\r\n\r\nnamespace ");
            
            #line 9 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(config.ServerScope));
            
            #line default
            #line hidden
            this.Write(@"
{
	public class OfflineEntityBase : object, Microsoft.Synchronization.Services.IOfflineEntity {
        
		private Microsoft.Synchronization.Services.OfflineEntityMetadata _serviceMetadata;
        
		public OfflineEntityBase() {
			ServiceMetadata = new Microsoft.Synchronization.Services.OfflineEntityMetadata();
		}
        
		public virtual Microsoft.Synchronization.Services.OfflineEntityMetadata ServiceMetadata {
			get {
				return _serviceMetadata;
			}
			set {
				if ((value == null)) {
					throw new System.ArgumentNullException(""value"");
				}
				_serviceMetadata = value;
			}
		}
	}

	");
            
            #line 32 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
 foreach(var kvp in config.EntitiesBySchema){ 
            
            #line default
            #line hidden
            this.Write(" \r\n\r\n\tnamespace ");
            
            #line 34 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(kvp.Key));
            
            #line default
            #line hidden
            this.Write("\r\n\t{\r\n\t\t");
            
            #line 36 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
 foreach(var entity in kvp.Value){ 
            
            #line default
            #line hidden
            this.Write(" \r\n\r\n\t\t[Microsoft.Synchronization.Services.SyncEntityTypeAttribute(TableGlobalNam" +
                    "e=\"");
            
            #line 38 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Schema));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 38 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Name));
            
            #line default
            #line hidden
            this.Write("\", TableLocalName=\"");
            
            #line 38 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Schema));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 38 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Name));
            
            #line default
            #line hidden
            this.Write("\", KeyFields=\"__");
            
            #line 38 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.KeyField));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\tpublic partial class ");
            
            #line 39 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Name));
            
            #line default
            #line hidden
            this.Write(" : OfflineEntityBase \r\n\t\t{\r\n\t\t\t");
            
            #line 41 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
 foreach(var field in entity.Fields){ 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\tprivate ");
            
            #line 43 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.DataType));
            
            #line default
            #line hidden
            this.Write(" _");
            
            #line 43 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n\r\n\t\t\t");
            
            #line 45 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
 if(field.AllowNull){ 
            
            #line default
            #line hidden
            this.Write("\t\t\t[Microsoft.Synchronization.Services.SyncEntityPropertyIsNullableAttribute()]\r\n" +
                    "\t\t\t");
            
            #line 47 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\r\n\t\t\t");
            
            #line 48 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
 if(!field.SimpleType || field.KeyField){ 
            
            #line default
            #line hidden
            this.Write("\t\t\t[Microsoft.Synchronization.Services.SyncEntityPropertyMappingAttribute(LocalNa" +
                    "me=\"");
            
            #line 49 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\t\t");
            
            #line 50 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t\tpublic ");
            
            #line 51 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.DataType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 51 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
 if(!field.SimpleType || field.KeyField){ 
            
            #line default
            #line hidden
            this.Write("__");
            
            #line 51 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
}
            
            #line default
            #line hidden
            
            #line 51 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));
            
            #line default
            #line hidden
            this.Write(" \r\n\t\t\t{\r\n\t\t\t\tget \r\n\t\t\t\t{\r\n\t\t\t\t\treturn _");
            
            #line 55 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t\t}\r\n\t\t\t\tset \r\n\t\t\t\t{\r\n\t\t\t\t\t_");
            
            #line 59 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));
            
            #line default
            #line hidden
            this.Write(" = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t");
            
            #line 63 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\r\n\t\t");
            
            #line 66 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
 foreach(var tabularSection in entity.TabularSections){ 
            
            #line default
            #line hidden
            this.Write("\t\r\n\r\n\t\t[Microsoft.Synchronization.Services.SyncEntityTypeAttribute(TableGlobalNam" +
                    "e=\"");
            
            #line 68 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Schema));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 68 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Name));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 68 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tabularSection.Name));
            
            #line default
            #line hidden
            this.Write("\", TableLocalName=\"");
            
            #line 68 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Schema));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 68 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Name));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 68 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tabularSection.Name));
            
            #line default
            #line hidden
            this.Write("\", KeyFields=\"__");
            
            #line 68 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tabularSection.KeyField));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\tpublic partial class ");
            
            #line 69 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Name));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 69 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tabularSection.Name));
            
            #line default
            #line hidden
            this.Write(" : OfflineEntityBase \r\n\t\t{\r\n\t\t\t");
            
            #line 71 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
 foreach(var field in tabularSection.Fields){ 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\tprivate ");
            
            #line 73 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.DataType));
            
            #line default
            #line hidden
            this.Write(" _");
            
            #line 73 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n\r\n\t\t\t");
            
            #line 75 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
 if(field.AllowNull){ 
            
            #line default
            #line hidden
            this.Write("\t\t\t[Microsoft.Synchronization.Services.SyncEntityPropertyIsNullableAttribute()]\r\n" +
                    "\t\t\t");
            
            #line 77 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 78 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
 if(!field.SimpleType || field.KeyField || field.RefField){ 
            
            #line default
            #line hidden
            this.Write("\t\t\t[Microsoft.Synchronization.Services.SyncEntityPropertyMappingAttribute(LocalNa" +
                    "me=\"");
            
            #line 79 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));
            
            #line default
            #line hidden
            this.Write("\")]\r\n\t\t\t");
            
            #line 80 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t\tpublic ");
            
            #line 81 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.DataType));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 81 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
 if(!field.SimpleType || field.KeyField || field.RefField){ 
            
            #line default
            #line hidden
            this.Write("__");
            
            #line 81 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
}
            
            #line default
            #line hidden
            
            #line 81 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));
            
            #line default
            #line hidden
            this.Write(" \r\n\t\t\t{\r\n\t\t\t\tget \r\n\t\t\t\t{\r\n\t\t\t\t\treturn _");
            
            #line 85 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t\t}\r\n\t\t\t\tset \r\n\t\t\t\t{\r\n\t\t\t\t\t_");
            
            #line 89 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(field.Name));
            
            #line default
            #line hidden
            this.Write(" = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t");
            
            #line 93 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\r\n\t\t");
            
            #line 96 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\r\n\t\t");
            
            #line 99 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
}
            
            #line default
            #line hidden
            this.Write("\t}\r\n\r\n\t");
            
            #line 102 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\r\n\t[Microsoft.Synchronization.Services.SyncScopeAttribute()]\r\n    public class " +
                    "OfflineEntities \r\n\t{\r\n\t\t");
            
            #line 108 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
 foreach(var entity in config.Entities){ 
            
            #line default
            #line hidden
            this.Write("  \r\n\t\t  \r\n        private System.Collections.Generic.ICollection<");
            
            #line 110 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Schema));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 110 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Name));
            
            #line default
            #line hidden
            this.Write("> _");
            
            #line 110 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n\r\n\t\t");
            
            #line 112 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
 foreach(var tabularSection in entity.TabularSections){ 
            
            #line default
            #line hidden
            this.Write("\r\n        private System.Collections.Generic.ICollection<");
            
            #line 114 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Schema));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 114 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Name));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 114 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tabularSection.Name));
            
            #line default
            #line hidden
            this.Write("> _");
            
            #line 114 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Name));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 114 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tabularSection.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n\r\n\t\t");
            
            #line 116 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\t\t");
            
            #line 118 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
}
            
            #line default
            #line hidden
            this.Write("    }\r\n\r\n\t\r\n\tpublic static class Helper\r\n    {\r\n        public static void AddFil" +
                    "ters(Microsoft.Synchronization.Services.ISyncServiceConfiguration config)\r\n     " +
                    "   {\r\n\t\t\t");
            
            #line 126 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
 foreach(var entity in config.Entities){ 
            
            #line default
            #line hidden
            this.Write("  \t  \r\n\t\t\t\t");
            
            #line 127 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
 foreach(var parameter in entity.SyncFilterParameters){ 
            
            #line default
            #line hidden
            this.Write(" \t\t\r\n\t\t\t\tconfig.AddFilterParameterConfiguration(\"");
            
            #line 128 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("\", \"");
            
            #line 128 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Schema));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 128 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Name));
            
            #line default
            #line hidden
            this.Write("\", \"@");
            
            #line 128 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("\", typeof(");
            
            #line 128 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.DataType));
            
            #line default
            #line hidden
            this.Write("));\r\n\t\t\t\t");
            
            #line 129 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t\t\t");
            
            #line 130 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
 foreach(var tabularSection in entity.TabularSections){ 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t");
            
            #line 131 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
 foreach(var parameter in tabularSection.SyncFilterParameters){ 
            
            #line default
            #line hidden
            this.Write(" \t\t\r\n\t\t\t\t\tconfig.AddFilterParameterConfiguration(\"");
            
            #line 132 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("\", \"");
            
            #line 132 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Schema));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 132 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Name));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 132 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tabularSection.Name));
            
            #line default
            #line hidden
            this.Write("\", \"@");
            
            #line 132 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.Name));
            
            #line default
            #line hidden
            this.Write("\", typeof(");
            
            #line 132 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parameter.DataType));
            
            #line default
            #line hidden
            this.Write("));\r\n\t\t\t\t\t");
            
            #line 133 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t\t\t");
            
            #line 134 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 135 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
}
            
            #line default
            #line hidden
            this.Write(@"        }
    }

	public class DeviceSyncService : Microsoft.Synchronization.Services.SyncService<OfflineEntities>
    {
		private String scope;

		public String Scope
		{
			get
			{
				return scope;
			}
		}

		public DeviceSyncService()
		{
		}

		public DeviceSyncService(String scope)
		{
			this.scope = scope;
		}

        public static void InitializeService(Microsoft.Synchronization.Services.ISyncServiceConfiguration config, string dataBaseName)
        {
			config.ServerConnectionString = Common.Solution.CreateFromContext(dataBaseName).ConnectionString;
            config.SetEnableScope(""");
            
            #line 163 "D:\Projects\core\BitMobileServer\Core\CodeFactory\CodeGeneration\Templates\Code\Server.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(config.ServerScope));
            
            #line default
            #line hidden
            this.Write(@""");
			config.EnableDiagnosticPage = true;
            config.UseVerboseErrors = true;
			config.SetConflictResolutionPolicy(Microsoft.Synchronization.Services.ConflictResolutionPolicy.ServerWins);
            Helper.AddFilters(config);
        }

		public static Guid Logon(string dataBaseName, System.Net.NetworkCredential credential, String configName, String configVersion)
        {
			return Common.Logon.GetUserId(dataBaseName, credential, configName, configVersion);
        }

    }
}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "11.0.0.0")]
    public class ServerBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
